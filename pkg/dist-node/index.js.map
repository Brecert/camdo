{"version":3,"file":"index.js","sources":["../dist-src/command-client.js"],"sourcesContent":["// todo(brecert): document and commentate code\r\nexport default class CommandClient {\r\n    constructor() {\r\n        this.commands = new Map;\r\n        this.types = new Map;\r\n        this.handlers = new Map;\r\n        this.types.set('any', {\r\n            id: 'any',\r\n            display: 'anything',\r\n            validate: val => true\r\n        });\r\n    }\r\n    defineType(opts) {\r\n        const defaults = {\r\n            id: opts.id,\r\n            display: opts.id,\r\n            validate: (val) => true\r\n        };\r\n        this.types.set(opts.id, { ...defaults, ...opts });\r\n    }\r\n    defineArg(arg) {\r\n        const defaults = {\r\n            id: arg.id,\r\n            name: arg.id,\r\n            description: arg.id,\r\n            type: \"any\",\r\n            capture: true,\r\n            required: true\r\n        };\r\n        return { ...defaults, ...arg };\r\n    }\r\n    defineCommand(cmd) {\r\n        const defaults = {\r\n            ...cmd,\r\n            name: cmd.name || cmd.id,\r\n            description: cmd.description || cmd.name || cmd.id,\r\n            args: (cmd.args || []).map(this.defineArg)\r\n        };\r\n        this.commands.set(defaults.id, defaults);\r\n    }\r\n    validateArgs(args, cmd, handler) {\r\n        let data = {};\r\n        return {\r\n            validated: cmd.args.every((cmdArg, i) => {\r\n                let arg = args[i] || cmdArg.default_value;\r\n                if (!this.types.has(cmdArg.type)) {\r\n                    throw `${cmdArg.type} on ${cmdArg.id} is not currently registered`;\r\n                }\r\n                // if not required and undefined then skip validation\r\n                if (!cmdArg.required && arg === undefined) {\r\n                    return true;\r\n                }\r\n                let validated = this.types.get(cmdArg.type).validate(arg);\r\n                data = { cmdArg, failedArg: arg };\r\n                return validated;\r\n            }),\r\n            data\r\n        };\r\n    }\r\n    async addHandler(params) {\r\n        this.handlers.set(params.id, params);\r\n        let handler = this.handlers.get(params.id);\r\n        this.commands.forEach((cmd) => {\r\n            handler.event(async (args, ...passedData) => {\r\n                try {\r\n                    let validated = this.validateArgs(args, cmd, handler);\r\n                    if (validated.validated) {\r\n                        let retArgs = cmd.args\r\n                            .filter(cmdArg => cmdArg.capture)\r\n                            .map((cmdArg, i) => {\r\n                            let arg = args[i] || cmdArg.default_value;\r\n                            return arg;\r\n                        });\r\n                        const data = await cmd.run(retArgs);\r\n                        handler.send(data, ...passedData);\r\n                    }\r\n                    else {\r\n                        handler.send(this.failedMessage(validated.data.cmdArg, validated.data.failedArg), ...passedData);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }, cmd);\r\n        });\r\n    }\r\n    failedMessage(cmdArg, failedArg) {\r\n        return {\r\n            name: \"ERROR\",\r\n            title: `Expected type \"${cmdArg.type}\" at argument \"${cmdArg.id}\" not \"${failedArg}\"`,\r\n            description: cmdArg.fail_message || `argument \"${cmdArg.id}\" does not accept \\`${failedArg}\\`.`,\r\n            color: 0xdd3344\r\n        };\r\n    }\r\n}\r\n"],"names":["CommandClient","constructor","commands","Map","types","handlers","set","id","display","validate","val","defineType","opts","defaults","defineArg","arg","name","description","type","capture","required","defineCommand","cmd","args","map","validateArgs","handler","data","validated","every","cmdArg","i","default_value","has","undefined","get","failedArg","addHandler","params","forEach","event","passedData","retArgs","filter","run","send","failedMessage","err","console","error","title","fail_message","color"],"mappings":"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"}